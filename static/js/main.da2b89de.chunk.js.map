{"version":3,"sources":["components/Analysis.js","components/BaseRunners.js","components/GameLog.js","actions.js","store/gameactions.js","components/GameSimulator.js","components/GameStats.js","components/InningState.js","components/ScoreBoard.js","components/Weights.js","store/bigmess.js","store/initialState.js","store/reducer.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["Analysis","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setHistogram","evt","setState","histogram","target","value","state","_props$data","data","innings","runs","_props$data$runCounts","runCounts","_props$data$per","per9","runsPer9","round","histogramData","inning","values","keys","map","k","count","mark","type","encoding","x","field","y","react_default","a","createElement","className","htmlFor","id","onChange","react_vega_lite_min_default","spec","React","Component","connect","_state$gameState","gameState","batting","first","second","third","classNames","home","away","viewBox","width","join","transform","height","undefined","log","winner","outs","logs","i","awaylog","homelog","push","label","concat","length","reverse","l","key","style","fontWeight","j","SINGLE","DOUBLE","TRIPLE","HOME_RUN","BASE_ON_BALLS","BASE_ON_ERROR","STRIKE_OUT","OUT_AT_FIRST","FOUL_OUT","FLY_OUT","DOUBLE_PLAY","MAKE_PLAY","UPDATE_DATA","UPDATE_WEIGHTS","SIMULATE_UNTIL","STOP_SIMULATION","SET_SIMULATION_DELAY","RESET_GAME","RESET_STATISTICS","LOCK_STATE","UNLOCK_STATE","gameActionList","getFunction","single","double","triple","homerun","baseonballs","baseonerror","strikeout","outatfirst","foulout","flyout","doubleplay","options","scoreFromSecondOnSingle","firstToThirdOnSingle","stats","hits","singles","scoreFromFirstOnDouble","doubles","triples","homeruns","bbs","s","errors","strikeouts","outatfirsts","foulouts","scoreFromThirdOnFlyOut","flyouts","sacrifices","doubleplays","pickRandom","weightedArray","random","simulateInnings","n","_ref2$options","arguments","in9","times","r","_ref","_ref$options","_ref$initialGameState","initialGameState","objectSpread","_getFunction","simulateInning","GameSimulator","resetGame","quickLock","stopSimulation","getRandomAction","simulateBatter","action","makePlay","delay","lockState","setTimeout","unlockState","simDelay","setSimDelay","v","setSimulationDelay","doAutoSim","locked","simUntil","setSimMode","simMode","startSimulation","mode","simulateUntil","simulateLots","_ref4$n","updateData","disableStart","disableStop","display","flexDirection","onClick","disabled","resetStatistics","autosimulate","until","dispatch","payload","t","walks","ab","err","obp","slug","tb","total","table","team","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","awayProps","other","homeProps","textAlign","stat","_stat","slicedToArray","statName","statChecker","awayStat","homeStat","lastInningLog","inningLog","lastAB","_state$stats","header","awayScores","homeScores","awayTotal","homeTotal","awayScore","homeScore","active","isActive","Weights","updateWeight","updateWeights","weights","defineProperty","_this2","min","updateStats","old","updates","result","buildWeightedArray","_loop","applyUpdates","updated","_updates$stats","teamStats","currentInningStats","awayscore","homescore","checkForWin","tolog","console","updateCounter","_ref$runs","_ref$innings","_ref$runCounts","_ref$per","applyAndCheck","f","applyFunction","current9","updateDataFromInning","_state$gameState2","advanceInning","initialState","reducer","store","createStore","App","es","components_GameSimulator","components_Analysis","components_Weights","components_GameStats","components_ScoreBoard","components_BaseRunners","components_InningState","components_GameLog","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4VAKMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAIRQ,aAAe,SAAAC,GAAG,OAAIR,EAAKS,SAAS,CAACC,UAAWF,EAAIG,OAAOC,SAHzDZ,EAAKa,MAAQ,CAACH,UAAW,QAFRV,wEAQjB,IADOc,EACOX,KAAKJ,MACoCgB,KAA/CC,EAFDF,EAECE,QAASC,EAFVH,EAEUG,KAFVC,EAAAJ,EAEgBK,iBAFhB,IAAAD,EAE0B,GAF1BA,EAAAE,EAAAN,EAE8BO,YAF9B,IAAAD,EAEmC,GAFnCA,EAGDE,EAAWC,IAAa,EAAPN,EAAWD,EAAS,GACrCQ,EAAgB,CAACH,KAAMA,EAAMI,OAAQN,GAAWhB,KAAKU,MAAMH,WAE3DA,EAAY,CAChBK,KAAM,CAACW,OAFezB,OAAO0B,KAAKH,GAAeI,IAAI,SAAAC,GAAC,MAAK,CAACZ,KAAMY,EAAGC,MAAON,EAAcK,OAG1FE,KAAM,CAACC,KAAM,OACbC,SAAU,CACRC,EAAG,CAACC,MAAO,OAAQH,KAAM,gBACzBI,EAAG,CAACD,MAAO,QAASH,KAAM,kBAG9B,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAKvB,GAAW,IAElBqB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAKtB,GAAQ,IAEfoB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAKjB,GAAY,MAIvBe,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,kBAAf,cACAJ,EAAAC,EAAAC,cAAA,UAAQG,GAAG,iBACT9B,MAAOT,KAAKU,MAAMH,UAClBiC,SAAUxC,KAAKI,cAEf8B,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,UAAd,iBACAyB,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,QAAd,cAEFyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZhB,EAAgBa,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAUO,KAAMnC,IAAe,cAlDnCoC,IAAMC,WAyDdC,cAAQ,SAAAnC,GAAK,MAAK,CAACE,KAAMF,EAAME,OAA/BiC,CAAuClD,GCzCvCkD,cACb,SAAAnC,GAAS,IAAAoC,EACiCpC,EAAMqC,UAC9C,MAAO,CAACC,QAFDF,EACAE,QACUC,MAFVH,EACSG,MACQC,OAFjBJ,EACgBI,OACSC,MAFzBL,EACwBK,QAFpBN,CAlBK,SAAAjD,GAClB,IAAMwD,EAAa,CAAC,QAAS,CAACC,KAAM,OAAQC,KAAM,QAAQ1D,EAAMoD,UAChE,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKmB,QAAQ,cAAcC,MAAM,OAC/BtB,EAAAC,EAAAC,cAAA,KAAGC,UAAWe,EAAWK,KAAK,KAAMC,UAAU,qBAC5CxB,EAAAC,EAAAC,cAAA,QAAML,EAAE,KAAKE,EAAE,KAAKuB,MAAM,KAAKG,OAAO,KACpCtB,UAAWzC,EAAMqD,MAAQ,iBAAcW,IACzC1B,EAAAC,EAAAC,cAAA,QAAML,EAAE,KAAKE,EAAE,KAAKuB,MAAM,KAAKG,OAAO,KACpCtB,UAAWzC,EAAMsD,OAAS,iBAAcU,IAC1C1B,EAAAC,EAAAC,cAAA,QAAML,EAAE,KAAKE,EAAE,KAAKuB,MAAM,KAAKG,OAAO,KACpCtB,UAAWzC,EAAMuD,MAAQ,iBAAcS,SCwBpCf,cACb,SAAAnC,GAAK,MAAK,CACRmD,IAAKnD,EAAMmD,IACXvC,OAAQZ,EAAMqC,UAAUzB,OACxB0B,QAAStC,EAAMqC,UAAUC,QACzBc,OAAQpD,EAAMqC,UAAUe,OACxBC,KAAMrD,EAAMqC,UAAUgB,OANXlB,CAnCC,SAAAjD,GAEd,IADA,IAAMoE,EAAO,GACJC,EAAI,EAAGA,GAAKrE,EAAM0B,OAAQ2C,IAAK,CACtC,IAAMC,EAAUtE,EAAMiE,IAAIP,KAAKW,IAAM,GAC/BE,EAAUvE,EAAMiE,IAAIR,KAAKY,IAAM,GACjCC,GACFF,EAAKI,KAAK,CAACC,MAAK,iBAAAC,OAAmBL,GAAKJ,IAAKK,KAG7CC,EAAQI,QACa,SAAlB3E,EAAMoD,UACJpD,EAAMkE,QAA6B,SAAlBlE,EAAMoD,SAAwBpD,EAAMmE,MAAQ,IAElEC,EAAKI,KAAK,CAACC,MAAK,oBAAAC,OAAsBL,GAAKJ,IAAKM,IAIpD,OADAH,EAAKQ,UAEHtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZ2B,EAAKvC,IAAI,SAACgD,EAAER,GACX,OACE/B,EAAAC,EAAAC,cAAA,OAAKsC,IAAKT,EAAG5B,UAAU,aACrBH,EAAAC,EAAAC,cAAA,KAAGuC,MAAO,CAACC,WAAY,SAAUH,EAAEJ,OAClCI,EAAEZ,IAAIpC,IAAI,SAACM,EAAE8C,GACZ,OACE3C,EAAAC,EAAAC,cAAA,KAAGsC,IAAKG,GAAI9C,oDC5Bf+C,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAW,WACXC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAa,aACbC,EAAe,eACfC,EAAW,WACXC,EAAU,UACVC,EAAc,cAEdC,EAAY,YACZC,EAAc,cACdC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAuB,uBACvBC,EAAa,aACbC,EAAmB,mBACnBC,EAAa,aACbC,EAAe,eA+CfC,EAAiB,CAC5BrB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GCjEK,SAASY,EAAYvE,GAC1B,OAAOA,GACL,KAAKiD,EAAQ,OAAOuB,EACpB,KAAKtB,EAAQ,OAAOuB,EACpB,KAAKtB,EAAQ,OAAOuB,EACpB,KAAKtB,EAAU,OAAOuB,EACtB,KAAKtB,EAAe,OAAOuB,EAC3B,KAAKtB,EAAe,OAAOuB,GAC3B,KAAKtB,EAAY,OAAOuB,GACxB,KAAKtB,EAAc,OAAOuB,GAC1B,KAAKtB,EAAU,OAAOuB,GACtB,KAAKtB,EAAS,OAAOuB,GACrB,KAAKtB,EAAa,OAAOuB,GACzB,QAAS,OAAO,kBAAM,OAOnB,SAASV,EAAO3F,EAAOsG,GAC5B,IAAkB9D,GAAS,EAAOC,GAAQ,EAAOrC,EAAO,EAkBxD,OAjBIJ,EAAMyC,QACRrC,GAAQ,GAENJ,EAAMwC,SACJ8D,EAAQC,yBAA2BD,EAAQE,qBAC7CpG,GAAQ,EAERqC,GAAQ,GAGRzC,EAAMuC,QACJ+D,EAAQE,qBACV/D,GAAQ,EAERD,GAAS,GAGN,CACLxC,MAAO,CAACuC,OAnBE,EAmBKC,SAAQC,SACvBgE,MAAO,CAACrG,OAAMsG,KAAM,EAAGC,QAAS,GAChCxD,IAAK,UAIF,SAASyC,EAAO5F,EAAOsG,GAC5B,IAAkC7D,GAAQ,EAAOrC,EAAO,EAcxD,OAbIJ,EAAMyC,QACRrC,GAAQ,GAENJ,EAAMwC,SACRpC,GAAQ,GAENJ,EAAMuC,QACJ+D,EAAQM,uBACVxG,GAAQ,EAERqC,GAAQ,GAGL,CACLzC,MAAO,CAACuC,OAfE,EAeKC,QAfW,EAeHC,SACvBgE,MAAO,CAACrG,OAAMsG,KAAM,EAAGG,QAAS,GAChC1D,IAAK,UAIF,SAAS0C,EAAO7F,GACrB,IAAiDI,EAAO,EAUxD,OATIJ,EAAMyC,QACRrC,GAAQ,GAENJ,EAAMwC,SACRpC,GAAQ,GAENJ,EAAMuC,QACRnC,GAAQ,GAEH,CACLJ,MAAO,CAACuC,OAXE,EAWKC,QAXW,EAWHC,OAXkB,GAYzCgE,MAAO,CAACrG,OAAMsG,KAAM,EAAGI,QAAS,GAChC3D,IAAK,UAIF,SAAS2C,EAAQ9F,GACtB,IAAII,EAAO,EAIX,OAHIJ,EAAMuC,QAASnC,GAAQ,GACvBJ,EAAMwC,SAAUpC,GAAQ,GACxBJ,EAAMyC,QAASrC,GAAQ,GACpB,CACLJ,MAAO,CAACuC,OAAO,EAAOC,QAAQ,EAAOC,OAAO,GAC5CgE,MAAO,CAACrG,OAAMsG,KAAM,EAAGK,SAAU,GACjC5D,IAAK,YAIF,SAAS4C,EAAY/F,GAC1B,IACKwC,EAAiBxC,EAAjBwC,OAAQC,EAASzC,EAATyC,MACTrC,EAAO,EAUX,OATIJ,EAAMuC,QACRC,GAAS,EACLxC,EAAMwC,SACRC,GAAQ,EACJzC,EAAMyC,QACRrC,GAAQ,KAIP,CACLJ,MAAO,CAACuC,OAbI,EAaGC,SAAQC,SACvBgE,MAAO,CAACrG,OAAM4G,IAAK,GACnB7D,IAAK,QAIF,SAAS6C,GAAYhG,EAAOsG,GACjC,IAAMW,EAAItB,EAAO3F,EAAOsG,GACxB,MAAO,CACLtG,MAAOiH,EAAEjH,MACTyG,MAAO,CAACrG,KAAM6G,EAAER,MAAMrG,KAAM8G,OAAQ,GACpC/D,IAAK,kBAIF,SAAS8C,GAAUjG,GACxB,MAAO,CACLA,MAAO,CAACqD,KAAMrD,EAAMqD,KAAO,GAC3BoD,MAAO,CAACU,WAAY,GACpBhE,IAAK,cAIF,SAAS+C,GAAWlG,GACzB,MAAO,CACLA,MAAO,CAACqD,KAAMrD,EAAMqD,KAAO,GAC3BoD,MAAO,CAACW,YAAa,GACrBjE,IAAK,gBAIF,SAASgD,GAAQnG,GACtB,MAAO,CACLA,MAAO,CAACqD,KAAMrD,EAAMqD,KAAO,GAC3BoD,MAAO,CAACY,SAAU,GAClBlE,IAAK,YAIF,SAASiD,GAAOpG,EAAOsG,GAC5B,IAAIlG,EAAO,EACNmC,EAAwBvC,EAAxBuC,MAAOC,EAAiBxC,EAAjBwC,OAAQC,EAASzC,EAATyC,MAChB6D,EAAQgB,wBACN7E,GAASzC,EAAMqD,KAAO,IACxBjD,GAAQ,EACRqC,GAAQ,GAGZ,IAAIgE,EAAQ,CAACrG,OAAMmH,QAAS,GAI5B,OAHInH,IACFqG,EAAMe,WAAa,GAEd,CACLxH,MAAO,CAACqD,KAAMrD,EAAMqD,KAAO,EAAGd,QAAOC,SAAQC,SAC7CgE,QACAtD,IAAK,WAIF,SAASkD,GAAWrG,GAEzB,GAAIA,EAAMqD,KAAO,EACf,OAAO6C,GAAWlG,GAEpB,IAAKA,EAAMuC,QAAUvC,EAAMwC,SAAWxC,EAAMyC,MAC1C,OAAOyD,GAAWlG,GANY,IAQ3BuC,EAAwBvC,EAAxBuC,MAAOC,EAAiBxC,EAAjBwC,OAAQC,EAASzC,EAATyC,MAQpB,OAPIA,EACFA,GAAQ,EACCD,EACTA,GAAS,EACAD,IACTA,GAAQ,GAEH,CACLvC,MAAO,CAACuC,QAAOC,SAAQC,QAAOY,KAAMrD,EAAMqD,KAAO,GACjDoD,MAAO,CAACgB,YAAa,GACrBtE,IAAK,eC3LT,SAASuE,GAAWC,GAClB,OAAOA,EAAcC,IAAO,EAAED,EAAc9D,OAAO,IAcrD,SAASgE,GAAgBF,EAAeG,GAAoB,IAAAC,GAAAC,UAAAnE,OAAA,QAAAX,IAAA8E,UAAA,GAAAA,UAAA,GAAJ,IAAZ1B,eAAgB,IAAAyB,EAAR,GAAQA,EACtD3H,EAAO,EAAGE,EAAY,GAAIE,EAAO,GAAIyH,EAAM,EAAG1E,EAAI,EAatD,OAZA2E,IAAMJ,EAAG,WACPvE,GAAK,EACL,IAAM4E,EAfV,SAAwBR,GAGtB,IAH2E,IAAAS,EAAAJ,UAAAnE,OAAA,QAAAX,IAAA8E,UAAA,GAAAA,UAAA,GAAJ,GAAIK,EAAAD,EAArC9B,eAAqC,IAAA+B,EAA7B,GAA6BA,EAAAC,EAAAF,EAAzBG,wBAAyB,IAAAD,EAAR,GAAQA,EACvElI,EAAO,EACPiC,EAASjD,OAAAoJ,EAAA,EAAApJ,CAAA,CAAImD,OAAO,EAAOC,QAAQ,EAAOC,OAAO,EAAOY,KAAM,GAAMkF,GACjElG,EAAUgB,KAAO,GAAG,KAAAoF,EACF/C,EAAYgC,GAAWC,GAAvBjC,CAAuCrD,EAAWiE,GAAlEtG,EADkByI,EAClBzI,MACPI,GAFyBqI,EACXhC,MACCrG,MAAQ,EACvBiC,EAASjD,OAAAoJ,EAAA,EAAApJ,CAAA,GAAOiD,EAAcrC,GAEhC,MAAO,CAAEI,QAOGsI,CAAef,EAAe,CAACrB,YAAUlG,KACnDA,GAAQ+H,EACRF,GAAOE,EACP7H,EAAU6H,IAAM7H,EAAU6H,IAAM,GAAK,EAC3B,IAAN5E,IACF/C,EAAKyH,IAAQzH,EAAKyH,IAAQ,GAAK,EAC/BA,EAAM,EACN1E,EAAI,KAGD,CAACnD,OAAME,YAAWE,OAAML,QAAS2H,OAGpCa,eAEJ,SAAAA,EAAYzJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqJ,IACjBxJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuJ,GAAAlJ,KAAAH,KAAMJ,KAIR0J,UAAY,WACVzJ,EAAK0J,YACL1J,EAAKD,MAAM4J,iBACX3J,EAAKD,MAAM0J,aARMzJ,EAWnB4J,gBAAkB,WAChB,OAAO5J,EAAKD,MAAMyI,cAAcC,IAAO,EAAEzI,EAAKD,MAAMyI,cAAc9D,OAAO,KAZxD1E,EAenB6J,eAAiB,WACf,IAAMC,EAAS9J,EAAK4J,kBACpB5J,EAAKD,MAAMgK,SAASD,IAjBH9J,EAoBnB2J,eAAiB,WACf3J,EAAKD,MAAM4J,iBACX3J,EAAK0J,aAtBY1J,EAyBnB0J,UAAY,WAAgB,IAAdM,GAAcnB,UAAAnE,OAAA,QAAAX,IAAA8E,UAAA,GAAAA,UAAA,GAAP,IAAPmB,MACZhK,EAAKD,MAAMkK,YACXC,WAAWlK,EAAKD,MAAMoK,YAAcH,GAAS,IAAIhK,EAAKD,MAAMqK,WA3B3CpK,EA8BnBqK,YAAc,SAAA7J,GACZ,IAAM8J,EAAI9J,EAAIG,OAAOC,OAChB0J,EAAItK,EAAKD,MAAMqK,UAClBpK,EAAKD,MAAMwK,oBAAoBD,GAC/BtK,EAAK0J,cAEL1J,EAAK0J,YACL1J,EAAKD,MAAMwK,oBAAoBD,KArChBtK,EAyCnBwK,UAAY,WACLxK,EAAKD,MAAM0K,SACVzK,EAAKD,MAAMkE,QAAkC,aAAxBjE,EAAKD,MAAM2K,UAClC1K,EAAK0J,YACL1J,EAAKD,MAAM0J,aACFzJ,EAAKD,MAAM2K,WACpB1K,EAAK6J,iBACLK,WAAWlK,EAAKwK,UAAWxK,EAAKD,MAAMqK,aAhDzBpK,EAqDnB2K,WAAa,SAAAnK,GACXR,EAAK2J,iBACL3J,EAAKS,SAAS,CAACmK,QAASpK,EAAIG,OAAOC,SAvDlBZ,EA0DnB6K,gBAAkB,WAChB,IAAMC,EAAO9K,EAAKa,MAAM+J,QACX,WAATE,EACF9K,EAAK6J,iBACa,WAATiB,EACT9K,EAAKD,MAAMgL,cAAc,UACP,SAATD,EACT9K,EAAKD,MAAMgL,cAAc,QACP,aAATD,GACT9K,EAAKD,MAAMgL,cAAc,aAnEV/K,EAuEnBgL,aAAe,WAAiB,IAAAC,GAAApC,UAAAnE,OAAA,QAAAX,IAAA8E,UAAA,GAAAA,UAAA,GAAP,IAARF,SAAe,IAAAsC,EAAb,IAAaA,EACxBlK,EAAO2H,GAAgB1I,EAAKD,MAAMyI,cAAeG,EAAG,CAACxB,QAASnH,EAAKD,MAAMoH,UAC/EnH,EAAKD,MAAMmL,WAAWnK,IAvEtBf,EAAKa,MAAQ,CAAC+J,QAAS,QAFN5K,oFA6EjBG,KAAKqK,6CAIL,IAAMW,EAAehL,KAAKJ,MAAM2K,UAAavK,KAAKJ,MAAMkE,QAAkC,aAAvB9D,KAAKU,MAAM+J,QACxEQ,GAAejL,KAAKJ,MAAM2K,SAChC,OACErI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKuC,MAAO,CAACuG,QAAS,SACpBhJ,EAAAC,EAAAC,cAAA,OAAKuC,MAAO,CAACuG,QAAS,OAAQC,cAAe,WAC3CjJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,gBAAf,UACAJ,EAAAC,EAAAC,cAAA,UAAQG,GAAG,eACT9B,MAAOT,KAAKJ,MAAMqK,SAClBzH,SAAUxC,KAAKkK,aAEfhI,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,KAAd,aACAyB,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,MAAd,UACAyB,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,OAAd,QACAyB,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,OAAd,UACAyB,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,OAAd,UAGJyB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,eAAf,SACAJ,EAAAC,EAAAC,cAAA,UAAQG,GAAG,cACT9B,MAAOT,KAAKU,MAAM+J,QAClBjI,SAAUxC,KAAKwK,YAEftI,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,UAAd,UACAyB,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,UAAd,eACAyB,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,QAAd,QACAyB,EAAAC,EAAAC,cAAA,UAAQ3B,MAAM,YAAd,aAGJyB,EAAAC,EAAAC,cAAA,UAAQgJ,QAASpL,KAAK0K,gBAAiBW,SAAUL,GAAjD,YACA9I,EAAAC,EAAAC,cAAA,UAAQgJ,QAASpL,KAAKwJ,eAAgB6B,SAAUJ,GAAhD,QACA/I,EAAAC,EAAAC,cAAA,UAAQgJ,QAASpL,KAAKsJ,WAAtB,YACApH,EAAAC,EAAAC,cAAA,UAAQgJ,QAASpL,KAAK6K,cAAtB,yBACA3I,EAAAC,EAAAC,cAAA,UAAQgJ,QAASpL,KAAKJ,MAAM0L,iBAA5B,8BAtHgB3I,IAAMC,WA8HnBC,eACb,SAAAnC,GAAK,MAAK,CACR4J,OAAQ5J,EAAM4J,OACdxG,OAAQpD,EAAMqC,UAAUe,OACxBuE,cAAe3H,EAAM2H,cACrB4B,SAAUvJ,EAAM6K,aAAa1B,MAC7BU,SAAU7J,EAAM6K,aAAaC,MAC7BxE,QAAStG,EAAMsG,UAEjB,SAAAyE,GAAQ,MAAK,CACX3B,UAAW,kBAAM2B,EF7HW,CAC9B5J,KAAMoE,KE6HJ+D,YAAa,kBAAMyB,EF1HW,CAChC5J,KAAMqE,KE0HJoD,UAAW,kBAAMmC,EFvIW,CAC9B5J,KAAMkE,KEuIJuF,gBAAiB,kBAAMG,EFpIW,CACpC5J,KAAMmE,KEoIJ+E,WAAY,SAAAnK,GAAI,OAAI6K,EFjKE,SAAA7K,GAAI,MAAK,CACjCiB,KAAM6D,EACNgG,QAAS9K,GE+JsBmK,CAAWnK,KACxCgJ,SAAU,SAAAD,GAAM,OAAI8B,EFvKS,CAC/B5J,KAAM4D,EACNiG,QEqKwC/B,KACtCiB,cAAe,SAAAY,GAAK,OAAIC,EFzJC,SAAAD,GAAK,MAAK,CACrC3J,KAAM+D,EACN8F,QAASF,GEuJ0BZ,CAAcY,KAC/ChC,eAAgB,kBAAMiC,EFrJW,CACnC5J,KAAMgE,KEqJJuE,mBAAoB,SAAAP,GAAK,OAAI4B,EFlJC,SAAA5B,GAAK,MAAK,CAC1ChI,KAAMiE,EACN4F,QAAS7B,GEgJ+BO,CAAmBP,OAlB9ChH,CAoBbwG,aC/LIjC,GAAO,SAAAuE,GAAC,OAAKA,EAAElE,UAAY,IAAMkE,EAAEnE,SAAW,IAAMmE,EAAEpE,SAAW,IAAMoE,EAAEtE,SAAW,IAEpFuE,GAAQ,SAAAD,GAAC,OAAIA,EAAEjE,KAAO,GAWtBmE,GAAK,SAAAF,GAAC,OAAIvE,GAAKuE,GATR,SAAAA,GACX,OACGA,EAAE9D,YAAc,IACd8D,EAAE7D,aAAe,IACjB6D,EAAE1D,SAAW,IACb0D,EAAE5D,UAAY,IACd4D,EAAExD,aAAe,GAGEpE,CAAK4H,GAVnB,SAAAA,GAAC,OAAIA,EAAE/D,QAAU,EAUOkE,CAAIH,IAElCI,GAAM,SAAAJ,GAAC,OAAIvK,KAAOgG,GAAKuE,GAAGC,GAAMD,KAAOE,GAAGF,GAAGC,GAAMD,IAAK,IACxDK,GAAO,SAAAL,GAAC,OAAIvK,IAfP,SAAAuK,GAAC,OAAI,GAAGA,EAAElE,UAAY,GAAK,GAAGkE,EAAEnE,SAAW,GAAK,GAAGmE,EAAEpE,SAAW,IAAMoE,EAAEtE,SAAW,GAetE4E,CAAGN,GAAKE,GAAGF,GAAI,IAqDxB9I,eAAQ,SAAAnC,GAAK,MAAK,CAACyG,MAAOzG,EAAMyG,QAAhCtE,CAlDG,SAAAjD,GAChB,IAAMyD,EAAOzD,EAAMuH,MAAM9D,KAAK6I,MACxB5I,EAAO1D,EAAMuH,MAAM7D,KAAK4I,MAExBC,EAAQ,CACZ,CAAC,UAAW,SAAArD,GAAA,IAAEsD,EAAFtD,EAAEsD,KAAF,OAAYP,GAAGO,KAC3B,CAAC,OAAQ,SAAAC,GAAA,IAAED,EAAFC,EAAED,KAAF,OAAYhF,GAAKgF,KAC1B,CAAC,QAAS,SAAAE,GAAA,OAAAA,EAAEF,KAAe1E,MAC3B,CAAC,aAAc,SAAA6E,GAAA,OAAAA,EAAEH,KAAevE,aAChC,CAAC,UAAW,SAAA2E,GAAA,OAAAA,EAAEJ,KAAe/E,UAC7B,CAAC,UAAW,SAAAoF,GAAA,OAAAA,EAAEL,KAAe7E,UAC7B,CAAC,UAAW,SAAAmF,GAAA,OAAAA,EAAEN,KAAe5E,UAC7B,CAAC,YAAa,SAAAmF,GAAA,OAAAA,EAAEP,KAAe3E,WAC/B,CAAC,iBAAkB,SAAAmF,GAAA,OAAAA,EAAER,KAAexE,SACpC,CAAC,cAAe,SAAAiF,GAAA,OAAAA,EAAET,KAAejE,cACjC,CAAC,UAAW,SAAA2E,GAAA,OAAAA,EAAEV,KAAelE,aAC7B,CAAC,MAAO,SAAA6E,GAAA,IArBApB,EAqBES,EAAFW,EAAEX,KAAF,OArBAT,EAqBgBS,EArBXhL,IAAMgG,GAAKuE,GAAKE,GAAGF,GAAI,KAsBpC,CAAC,MAAO,SAAAqB,GAAA,IAAEZ,EAAFY,EAAEZ,KAAF,OAAYL,GAAIK,KACxB,CAAC,OAAQ,SAAAa,GAAA,IAAEb,EAAFa,EAAEb,KAAF,OAAYJ,GAAKI,MAGtBc,EAAY,CAACd,KAAM9I,EAAM6J,MAAO9J,GAChC+J,EAAY,CAAChB,KAAM/I,EAAM8J,MAAO7J,GACtC,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOuC,MAAO,CAAC0I,UAAW,UACxBnL,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,mBAED+J,EAAM1K,IAAI,SAAA6L,GAAQ,IAAAC,EAAAzN,OAAA0N,GAAA,EAAA1N,CACewN,EADf,GACVG,EADUF,EAAA,GACAG,EADAH,EAAA,GAEXI,EAAWD,EAAYR,IAAc,EACrCU,EAAWF,EAAYN,IAAc,EAC3C,OACElL,EAAAC,EAAAC,cAAA,MAAIsC,IAAK4I,GACPpL,EAAAC,EAAAC,cAAA,UAAKqL,GACLvL,EAAAC,EAAAC,cAAA,UAAKuL,GACLzL,EAAAC,EAAAC,cAAA,UAAKwL,WCpCN/K,eACb,SAAAnC,GAAS,IAGHmN,EAHG/K,EACyBpC,EAAMqC,UAA/BC,EADAF,EACAE,QAASe,EADTjB,EACSiB,KAAMzC,EADfwB,EACexB,OAChBwM,EAAYpN,EAAMmD,IAAIb,GAAS1B,IAAW,GAYhD,MAVgB,SAAZ0B,EACF6K,EAAgBnN,EAAMmD,IAAIP,KAAKhC,GACtBA,EAAS,IAClBuM,EAAgBnN,EAAMmD,IAAIR,KAAK/B,EAAO,IAOjC,CAAC0B,UAASe,OAAMgK,OALRD,EAAUvJ,OACrBuJ,EAAUA,EAAUvJ,OAAO,GAC3BsJ,EACEA,EAAcA,EAActJ,OAAO,GAAnC,YAAAD,OAAgE,SAAZtB,EAAqB,OAAS,GAAlF,YACA,QAdKH,CAxBK,SAAAjD,GAClB,IAAMoD,EAAU,CAACM,KAAM,WAAYD,KAAM,QAAQzD,EAAMoD,SACvD,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAKY,IAEPd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UAAKxC,EAAMmE,OAEb7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAKxC,EAAMmO,OAASnO,EAAMmO,OAAS,aCgD9BlL,mBA9Bf,SAAmBnC,GAAO,IAAAoC,EACgBpC,EAAMqC,UAAvCzB,EADiBwB,EACjBxB,OAAQ0B,EADSF,EACTE,QAAec,GADNhB,EACAiB,KADAjB,EACMgB,QADNkK,EAEHtN,EAAMyG,MAApB9D,EAFiB2K,EAEjB3K,KAAMC,EAFW0K,EAEX1K,KACT2K,EAAS,GAAIC,EAAa,GAAIC,EAAa,GAC3CC,EAAY,EAAGC,EAAY,EAe/B,OAdAzF,IAAMtH,EAAQ,SAAAuD,GACZ,IAAMZ,EAAIY,EAAI,EACdoJ,EAAO7J,KAAKH,GACZ,IAAMqK,GAAahL,EAAKW,IAAM,IAAInD,MAAQ,EACpCyN,GAAalL,EAAKY,IAAM,IAAInD,MAAQ,EAC1CsN,GAAaE,EACbJ,EAAW9J,KAAKkK,GAChBD,GAAaE,EACTtK,GAAK3C,GAAsB,SAAZ0B,EACjBmL,EAAW/J,KAAKmK,GAEhBJ,EAAW/J,KAAK,OAGb,CACL6J,SACAG,YACAC,YACAvK,SACA0K,OAAQ,CAACxL,UAAS1B,OAAQwC,EAASxC,EAAS,EAAIA,GAChDgC,KAAM4K,EACN7K,KAAM8K,IAIKtL,CA/DI,SAAAjD,GACjB,IAAM6O,EAAW,SAAC9C,EAAG1H,GACnB,GAAK0H,IAAM/L,EAAM4O,OAAOxL,SAAaiB,KAAOrE,EAAM4O,OAAOlN,OACvD,MAAO,UAGX,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mBACCxC,EAAMqO,OAAOxM,IAAI,SAAAwC,GAAC,OAAI/B,EAAAC,EAAAC,cAAA,MAAIsC,IAAKT,GAAIA,OAGxC/B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,WACAH,EAAAC,EAAAC,cAAA,UAAKxC,EAAMwO,WAAa,GACvBxO,EAAM0D,KAAK7B,IAAI,SAACX,EAAMmD,GAAP,OAAa/B,EAAAC,EAAAC,cAAA,MAAIsC,IAAKT,EAAG5B,UAAWoM,EAAS,OAAQxK,EAAE,IAAKnD,MAE9EoB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,QACAH,EAAAC,EAAAC,cAAA,UAAKxC,EAAMyO,WAAa,GACvBzO,EAAMyD,KAAK5B,IAAI,SAACX,EAAMmD,GAAP,OAAa/B,EAAAC,EAAAC,cAAA,MAAIsC,IAAKT,EAAG5B,UAAWoM,EAAS,OAAQxK,EAAE,IAAKnD,oBCxBlF4N,8MACJC,aAAe,SAAAjN,GACb,OAAO,SAAArB,GAAG,OAAIR,EAAKD,MAAMgP,cAAX9O,OAAAoJ,EAAA,EAAApJ,CAAA,GAA6BD,EAAKD,MAAMiP,QAAxC/O,OAAAgP,GAAA,EAAAhP,CAAA,GAAkD4B,GAAKrB,EAAIG,OAAOC,mFAGzE,IAAAsO,EAAA/O,KACHkM,EAAQ,EACZ,IAAK,IAAMxK,KAAK1B,KAAKJ,MAAMiP,QACzB3C,IAAUlM,KAAKJ,MAAMiP,QAAQnN,GAK/B,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,qBAAgBF,EAAAC,EAAAC,cAAA,oCAGlBF,EAAAC,EAAAC,cAAA,aACG+D,EAAe1E,IAAI,SAAAC,GAClB,OACEQ,EAAAC,EAAAC,cAAA,MAAIsC,IAAKhD,GACPQ,EAAAC,EAAAC,cAAA,UAAKV,GACLQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAOP,KAAK,SACVmN,IAAK,EACLvO,MAAOsO,EAAKnP,MAAMiP,QAAQnN,GAC1Bc,SAAUuM,EAAKJ,aAAajN,MAEhCQ,EAAAC,EAAAC,cAAA,aAAAkC,OACMlD,IAAM,IAAM2N,EAAKnP,MAAMiP,QAAQnN,GAAKwK,EAAO,GADjD,SAMNhK,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,oBAAeF,EAAAC,EAAAC,cAAA,UAAK8J,cAtCdvJ,IAAMC,WA8CbC,eACb,SAAAnC,GAAK,MAAK,CAACmO,QAASnO,EAAMmO,UAC1B,SAAApD,GAAQ,MAAK,CAACmD,cAAe,SAAAC,GAAO,OAAIpD,ENpBb,SAAAoD,GAAO,MAAK,CACvChN,KAAM8D,EACN+F,QAASmD,GMkBwCD,CAAcC,OAFlDhM,CAGb6L,sBChDK,SAASO,GAAYC,EAAKC,GAC/B,IAAMC,EAAMtP,OAAAoJ,EAAA,EAAApJ,CAAA,GAAOoP,GACnB,IAAK,IAAMxN,KAAKyN,OACIvL,IAAdwL,EAAO1N,KACT0N,EAAO1N,GAAK,GAEd0N,EAAO1N,IAAMyN,EAAQzN,GAEvB,OAAO0N,EAsCF,SAASC,GAAmBR,GACjC,IAAMO,EAAS,GAD2BE,EAAA,SAE/B5N,GACTkH,IAAMiG,EAAQnN,GAAI,kBAAM0N,EAAOhL,KAAK1C,MADtC,IAAK,IAAMA,KAAKmN,EAASS,EAAd5N,GAGX,OAAO0N,EAGT,SAASG,GAAa7O,GAAmB,IA1DTwO,EAAKM,EA0DRL,EAAYzG,UAAAnE,OAAA,QAAAX,IAAA8E,UAAA,GAAAA,UAAA,GAAJ,GAAI+G,EACfN,EAAjBhI,aADgC,IAAAsI,EAC1B,GAD0BA,EACtB5L,EAAOsL,EAAPtL,IADsBf,EAEbpC,EAAMqC,UAAzBC,EAFgCF,EAEhCE,QAAS1B,EAFuBwB,EAEvBxB,OACZyB,GA7D0BmM,EA6DExO,EAAMqC,UA7DHyM,EA6DcL,EAAQzO,MA5DlDZ,OAAAoJ,EAAA,EAAApJ,CAAA,GAAIoP,EAAQM,IA6DbE,EAAYhP,EAAMyG,MAAMnE,GAASkJ,MACjCyD,GAAsBjP,EAAMyG,MAAMnE,IAAY,IAAI1B,IAAW,GAC/D6F,EAAMrG,OACQ,SAAZkC,IACFD,EAAU6M,WAAazI,EAAMrG,MAEf,SAAZkC,IACFD,EAAU8M,WAAa1I,EAAMrG,OAGjC,IAAMgD,EAzDD,SAAqBf,GAAW,IAC7BzB,EAAgDyB,EAAhDzB,OAAQ0B,EAAwCD,EAAxCC,QAAS6M,EAA+B9M,EAA/B8M,UAAWD,EAAoB7M,EAApB6M,UAAW7L,EAAShB,EAATgB,KAC/C,QAAIzC,EAAS,IAGTuO,IAAcD,IAGdC,EAAYD,IACE,SAAZ5M,GAAmC,SAAZA,GAAsBe,GAAQ,GAChD,OAGP6L,EAAYC,GACE,SAAZ7M,GAAsBe,GAAQ,EACzB,YAFX,GA4Ce+L,CAAY/M,GACvBe,IACFf,EAAUe,OAASA,GAErB,IAAIsL,EAAMtP,OAAAoJ,EAAA,EAAApJ,CAAA,GACLY,EADK,CAERqC,YACAoE,MAAMrH,OAAAoJ,EAAA,EAAApJ,CAAA,GACDY,EAAMyG,MADNrH,OAAAgP,GAAA,EAAAhP,CAAA,GAEFkD,EAFElD,OAAAoJ,EAAA,EAAApJ,CAAA,GAGEY,EAAMyG,MAAMnE,GAHdlD,OAAAgP,GAAA,EAAAhP,CAAA,CAIDoM,MAAO+C,GAAYS,EAAWvI,IAC7B7F,EAAS2N,GAAYU,EAAoBxI,OAG9CtD,IAAK,CACHP,KAAKxD,OAAAoJ,EAAA,EAAApJ,CAAA,GAAKY,EAAMmD,IAAIP,MACpBD,KAAKvD,OAAAoJ,EAAA,EAAApJ,CAAA,GAAKY,EAAMmD,IAAIR,SAMxB,GAHK+L,EAAOvL,IAAIb,GAAS1B,KACvB8N,EAAOvL,IAAIb,GAAS1B,GAAU,IAE5BuC,EAAK,CACP,IAAIkM,EAAQlM,EACRsD,EAAMrG,OACW,IAAfqG,EAAMrG,KACRiP,GAAK,UAELA,GAAK,KAAAzL,OAAS6C,EAAMrG,KAAf,SAEPiP,GAAK,KAAAzL,OAASvB,EAAU6M,UAAnB,KAAAtL,OAAgCvB,EAAU8M,UAA1C,MAEPG,QAAQnM,IAAIkM,GACZX,EAAOvL,IAAIb,GAAS1B,GAAQ8C,KAAK2L,GAEnC,OAAOX,EAkCT,SAASa,KAAkC,IAApBf,EAAoBxG,UAAAnE,OAAA,QAAAX,IAAA8E,UAAA,GAAAA,UAAA,GAAhB,GAAIyG,EAAYzG,UAAAnE,OAAA,QAAAX,IAAA8E,UAAA,GAAAA,UAAA,GAAJ,GACjC0G,EAAMtP,OAAAoJ,EAAA,EAAApJ,CAAA,GAAOoP,GACjB,IAAK,IAAMxN,KAAKyN,EACdC,EAAO1N,IAAM0N,EAAO1N,IAAM,GAAKyN,EAAQzN,GAEzC,OAAO0N,EAGF,SAASrE,GAAWnK,EAApBkI,GAAsE,IAAAoH,EAAApH,EAA3ChI,YAA2C,IAAAoP,EAAtC,EAAsCA,EAAAC,EAAArH,EAAnCjI,eAAmC,IAAAsP,EAA3B,EAA2BA,EAAAC,EAAAtH,EAAxB9H,iBAAwB,IAAAoP,EAAd,GAAcA,EAAAC,EAAAvH,EAAV5H,YAAU,IAAAmP,EAAL,GAAKA,EAC3E,OAAOvQ,OAAAoJ,EAAA,EAAApJ,CAAA,GACFc,EADL,CAEEC,QAASD,EAAKC,QAAUA,EACxBC,KAAMF,EAAKE,KAAOA,EAClBE,UAAWiP,GAAcrP,EAAKI,UAAWA,GACzCE,KAAM+O,GAAcrP,EAAKM,KAAMA,KAqB5B,SAASoP,GAAc5P,EAAO6P,GACnC,IAAK7P,EAAM4J,SAAW5J,EAAMqC,UAAUe,OAAQ,CAC5C,IAAIsL,EApER,SAAuB1O,EAAO6P,GAC5B,OAAI7P,EAAMqC,UAAUe,OACXpD,EAGF6O,GAAa7O,EADJ6P,EAAE7P,EAAMqC,UAAWrC,EAAMsG,UAgE1BwJ,CAAc9P,EAAO6P,GAOlC,OANInB,EAAOrM,UAAUgB,MAAQ,IAE1BrD,EAAMqC,UAAUzB,OAAS,GAAmC,SAA5BZ,EAAMqC,UAAUC,WAEjDoM,EAxBN,SAA8B1O,GAC5B,IAEIQ,EAFEJ,EAAOJ,EAAMyG,MAAMzG,EAAMqC,UAAUC,SAAStC,EAAMqC,UAAUzB,QAAQR,MAAQ,EAC9E2P,EAAQ3Q,OAAAoJ,EAAA,EAAApJ,CAAA,GAAOY,EAAM+P,UAQzB,OANAA,EAAS5P,SAAW,EACpB4P,EAAS3P,MAAQA,EACQ,IAArB2P,EAAS5P,UACXK,EAAIpB,OAAAgP,GAAA,EAAAhP,CAAA,GAAK2Q,EAAS3P,KAAO,GACzB2P,EAAW,CAAC5P,QAAS,EAAGC,KAAM,IAEzBhB,OAAAoJ,EAAA,EAAApJ,CAAA,GACFY,EADL,CAEEE,KAAMmK,GAAWrK,EAAME,KAAM,CAACE,OAAMD,QAAS,EAAGG,UAAUlB,OAAAgP,GAAA,EAAAhP,CAAA,GAAGgB,EAAO,GAAII,SACxEuP,aAWWC,CAAqBtB,IAE5BA,EAAOrM,UAAUe,QACnBkM,QAAQnM,IAAI,gBAAkBuL,EAAOrM,UAAUe,OAAS,SACtB,WAA9BsL,EAAO7D,aAAaC,OAAoD,SAA9B4D,EAAO7D,aAAaC,QAChE4D,EAAO7D,aAAPzL,OAAAoJ,EAAA,EAAApJ,CAAA,GAA0BsP,EAAO7D,aAAjC,CAA+CC,OAAO,KAEjD4D,IAEUA,EAAOrM,UA7JdgB,MAAQ,IA8JlBqL,EA3EN,SAAuB1O,GAAO,IAAAiQ,EACJjQ,EAAMqC,UAAzBC,EADuB2N,EACvB3N,QAAS1B,EADcqP,EACdrP,OAQd,MANgB,SAAZ0B,EACFA,EAAU,OACW,SAAZA,IACTA,EAAU,OACV1B,GAAU,GAELxB,OAAAoJ,EAAA,EAAApJ,CAAA,GACFY,EADL,CAEEqC,UAAUjD,OAAAoJ,EAAA,EAAApJ,CAAA,GACLY,EAAMqC,UADF,CAEPC,UACA1B,SACA2B,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPY,KAAM,MAyDG6M,CAAcxB,GACvBY,QAAQnM,IAAR,GAAAS,OAAe8K,EAAOrM,UAAUC,QAAhC,uBAAAsB,OAA6D8K,EAAOrM,UAAUzB,SAC5C,WAA9B8N,EAAO7D,aAAaC,QACtB4D,EAAO7D,aAAPzL,OAAAoJ,EAAA,EAAApJ,CAAA,GAA0BsP,EAAO7D,aAAjC,CAA+CC,OAAO,MAGnD4D,GAET,OAAO1O,EC1MT,IAyBMmO,GAAU,CACd/J,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,SAAU,EACVC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZC,aAAc,EACdC,SAAU,EACVC,QAAS,EACTC,YAAa,GAwBAqL,GAZM,CACnB9N,UAjDgB,CAChB8M,UAAW,EACXD,UAAW,EACXtO,OAAQ,EACR0B,QAAS,OACTC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPY,KAAM,EACND,OAAQ,MAyCRqD,MAvCY,CACZ7D,KAAM,CAAC4I,MAAO,IACd7I,KAAM,CAAC6I,MAAO,KAsCdrI,IApCU,CACVP,KAAM,GACND,KAAM,IAmCN2D,QAjCc,CACdgB,wBAAwB,EACxBf,yBAAyB,EACzBK,wBAAwB,EACxBJ,sBAAsB,GA8BtB2H,WACAxG,cAhBoBgH,GAAmBR,IAiBvCtD,aAhBmB,CACnBC,OAAO,EACP3B,MAAO,KAePjJ,KAbW,CACXE,KAAM,EACND,QAAS,EACTG,UAAW,IAWXyP,SAAU,CAAC5P,QAAS,EAAGC,KAAM,ICHhBgQ,OA9Bf,WAA6C,IAA5BpQ,EAA4BgI,UAAAnE,OAAA,QAAAX,IAAA8E,UAAA,GAAAA,UAAA,GAAtBmI,GAAclH,EAAQjB,UAAAnE,OAAA,EAAAmE,UAAA,QAAA9E,EAC3C,OAAO+F,EAAO9H,MACZ,KAAK4D,EAAW,OAAO6K,GAAc5P,EAAO0F,EAAYuD,EAAO+B,UAC/D,KAAK1F,EAAkB,OAAOlG,OAAAoJ,EAAA,EAAApJ,CAAA,GAAIY,EAAX,CAAkBE,KAAKd,OAAAoJ,EAAA,EAAApJ,CAAA,GAAK+Q,GAAajQ,MAAO6P,SAAS3Q,OAAAoJ,EAAA,EAAApJ,CAAA,GAAK+Q,GAAaJ,YAClG,KAAKvK,EAAc,OAAOpG,OAAAoJ,EAAA,EAAApJ,CAAA,GAAIY,EAAX,CAAkB4J,QAAQ,IAC7C,KAAKrE,EAAY,OAAOnG,OAAAoJ,EAAA,EAAApJ,CAAA,GAAIY,EAAX,CAAkB4J,QAAQ,IAC3C,KAAK5E,EAAa,OAAO5F,OAAAoJ,EAAA,EAAApJ,CAAA,GAAIY,EAAX,CAAkBE,KAAMmK,GAAWrK,EAAME,KAAM+I,EAAO+B,WACxE,KAAK3F,EACH,OAAOjG,OAAAoJ,EAAA,EAAApJ,CAAA,GACFY,EADL,CAEEqC,UAAW8N,GAAa9N,UACxBoE,MAAO0J,GAAa1J,MACpBtD,IAAKgN,GAAahN,MAEtB,KAAK8B,EACH,OAAO7F,OAAAoJ,EAAA,EAAApJ,CAAA,GACFY,EADL,CAEEmO,QAASlF,EAAO+B,QAChBrD,cAAegH,GAAmB1F,EAAO+B,WAE7C,KAAK7F,EACH,OAAO/F,OAAAoJ,EAAA,EAAApJ,CAAA,GAAIY,EAAX,CAAkB6K,aAAazL,OAAAoJ,EAAA,EAAApJ,CAAA,GAAKY,EAAM6K,aAAZ,CAA0BC,OAAO,MACjE,KAAK5F,EACH,OAAO9F,OAAAoJ,EAAA,EAAApJ,CAAA,GAAIY,EAAX,CAAkB6K,aAAazL,OAAAoJ,EAAA,EAAApJ,CAAA,GAAKY,EAAM6K,aAAZ,CAA0BC,MAAO7B,EAAO+B,YACxE,KAAK5F,EACH,OAAOhG,OAAAoJ,EAAA,EAAApJ,CAAA,GAAIY,EAAX,CAAkB6K,aAAazL,OAAAoJ,EAAA,EAAApJ,CAAA,GAAKY,EAAM6K,aAAZ,CAA0B1B,MAAOF,EAAO+B,YACxE,QAAS,OAAOhL,IC/CLqQ,GAFDC,aAAYF,ICsCXG,oLAzBX,OACE/O,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CAAUH,MAAOA,IACf7O,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC+O,GAAD,MACAjP,EAAAC,EAAAC,cAACgP,EAAD,MACAlP,EAAAC,EAAAC,cAACiP,GAAD,OAEFnP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACkP,GAAD,MACApP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACmP,GAAD,MACArP,EAAAC,EAAAC,cAACoP,EAAD,MACAtP,EAAAC,EAAAC,cAACqP,GAAD,QAGJvP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsP,EAAD,gBAnBM9O,aCFE+O,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/P,EAAAC,EAAAC,cAAC8P,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.da2b89de.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport round from 'lodash/round'\nimport VegaLite from 'react-vega-lite'\n\nclass Analysis extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {histogram: 'per9'}\n  }\n\n  setHistogram = evt => this.setState({histogram: evt.target.value})\n\n  render() {\n    const props = this.props\n    const { innings, runs, runCounts={}, per9={} } = props.data\n    const runsPer9 = round(runs * 9 / innings, 3)\n    const histogramData = {per9: per9, inning: runCounts}[this.state.histogram]\n    const histogramValues = Object.keys(histogramData).map(k => ({runs: k, count: histogramData[k]}))\n    const histogram = {\n      data: {values: histogramValues},\n      mark: {type: 'bar'},\n      encoding: {\n        x: {field: 'runs', type: 'quantitative'},\n        y: {field: 'count', type: 'quantitative'},\n      }\n    }\n    return (\n      <div className=\"Analysis\">\n        <span>Cumulative statistics</span>\n        <table>\n          <tbody>\n            <tr>\n              <td>Total Innings:</td>\n              <td>{innings || 0}</td>\n            </tr>\n            <tr>\n              <td>Total Runs:</td>\n              <td>{runs || 0}</td>\n            </tr>\n            <tr>\n              <td>Runs Per 9:</td>\n              <td>{runsPer9 || 0}</td>\n            </tr>\n          </tbody>\n        </table>\n        <label htmlFor=\"histogram-mode\">Histogram:</label>\n        <select id=\"histogram-mode\"\n          value={this.state.histogram}\n          onChange={this.setHistogram}\n        >\n          <option value=\"inning\">Single Inning</option>\n          <option value=\"per9\">9 Innings</option>\n        </select>\n        <div className=\"Histogram\">\n          {histogramData ? <VegaLite spec={histogram}/> : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(state => ({data: state.data}))(Analysis)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst BaseRunners = props => {\n  const classNames = ['Bases', {home: 'Home', away: 'Away'}[props.batting]]\n  return (\n    <div className=\"BaseRunners\">\n      <svg viewBox=\"0 0 100 100\" width=\"2cm\">\n        <g className={classNames.join(' ')} transform=\"rotate(-45,50,50)\">\n          <rect x=\"55\" y=\"55\" width=\"30\" height=\"30\" \n            className={props.first ? \"HasRunner\" : undefined}/>\n          <rect x=\"55\" y=\"15\" width=\"30\" height=\"30\" \n            className={props.second ? \"HasRunner\" : undefined}/>\n          <rect x=\"15\" y=\"15\" width=\"30\" height=\"30\" \n            className={props.third ? \"HasRunner\" : undefined}/>\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nexport default connect(\n  state => {\n    const {batting, first, second, third} = state.gameState\n    return {batting, first, second, third}\n  }\n)(BaseRunners)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst GameLog = props => {\n  const logs = []\n  for (let i = 1; i <= props.inning; i++) {\n    const awaylog = props.log.away[i] || []\n    const homelog = props.log.home[i] || []\n    if (awaylog) {\n      logs.push({label: `Top of Inning ${i}`, log: awaylog})\n    }\n    if (\n      homelog.length\n      || props.batting === 'home'\n      || (!props.winner && (props.batting === 'away') && (props.outs >= 3))\n    ) {\n      logs.push({label: `Bottom of Inning ${i}`, log: homelog})\n    }\n  }\n  logs.reverse()\n  return (\n    <div className=\"GameLog\">\n      {logs.map((l,i) => {\n        return (\n          <div key={i} className=\"InningLog\">\n            <p style={{fontWeight: 'bold'}}>{l.label}</p>\n            {l.log.map((x,j) => {\n              return (\n                <p key={j}>{x}</p>\n              )\n            })}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default connect(\n  state => ({\n    log: state.log,\n    inning: state.gameState.inning,\n    batting: state.gameState.batting,\n    winner: state.gameState.winner,\n    outs: state.gameState.outs,\n  })\n)(GameLog)\n","export const SINGLE = 'SINGLE'\nexport const DOUBLE = 'DOUBLE'\nexport const TRIPLE = 'TRIPLE'\nexport const HOME_RUN = 'HOME_RUN'\nexport const BASE_ON_BALLS = 'BASE_ON_BALLS'\nexport const BASE_ON_ERROR = 'BASE_ON_ERROR'\nexport const STRIKE_OUT = 'STRIKE_OUT'\nexport const OUT_AT_FIRST = 'OUT_AT_FIRST'\nexport const FOUL_OUT = 'FOUL_OUT'\nexport const FLY_OUT = 'FLY_OUT'\nexport const DOUBLE_PLAY = 'DOUBLE_PLAY'\n\nexport const MAKE_PLAY = 'MAKE_PLAY'\nexport const UPDATE_DATA = 'UPDATE_DATA'\nexport const UPDATE_WEIGHTS = 'UPDATE_WEIGHTS'\nexport const SIMULATE_UNTIL = 'SIMULATE_UNTIL'\nexport const STOP_SIMULATION = 'STOP_SIMULATION'\nexport const SET_SIMULATION_DELAY = 'SET_SIMULATION_DELAY'\nexport const RESET_GAME = 'RESET_GAME'\nexport const RESET_STATISTICS = 'RESET_STATISTICS'\nexport const LOCK_STATE = 'LOCK_STATE'\nexport const UNLOCK_STATE = 'UNLOCK_STATE'\n\nexport const makePlay = play => ({\n  type: MAKE_PLAY,\n  payload: play\n})\n\nexport const updateData = data => ({\n  type: UPDATE_DATA,\n  payload: data\n})\n\nexport const updateWeights = weights => ({\n  type: UPDATE_WEIGHTS,\n  payload: weights,\n})\n\nexport const simulateUntil = until => ({\n  type: SIMULATE_UNTIL,\n  payload: until\n})\n\nexport const stopSimulation = () => ({\n  type: STOP_SIMULATION,\n})\n\nexport const setSimulationDelay = delay => ({\n  type: SET_SIMULATION_DELAY,\n  payload: delay\n})\n\nexport const resetGame = () => ({\n  type: RESET_GAME\n})\n\nexport const resetStatistics = () => ({\n  type: RESET_STATISTICS\n})\n\nexport const lockState = () => ({\n  type: LOCK_STATE\n})\n\nexport const unlockState = () => ({\n  type: UNLOCK_STATE\n})\n\nexport const gameActionList = [\n  SINGLE,\n  DOUBLE,\n  TRIPLE,\n  HOME_RUN,\n  BASE_ON_BALLS,\n  BASE_ON_ERROR,\n  STRIKE_OUT,\n  OUT_AT_FIRST,\n  FOUL_OUT,\n  FLY_OUT,\n  DOUBLE_PLAY,\n]","import {\n  SINGLE,\n  DOUBLE,\n  TRIPLE,\n  HOME_RUN,\n  BASE_ON_BALLS,\n  BASE_ON_ERROR,\n  STRIKE_OUT,\n  OUT_AT_FIRST,\n  FOUL_OUT,\n  FLY_OUT,\n  DOUBLE_PLAY,\n} from '../actions'\n\nexport function getFunction(type) {\n  switch(type) {\n    case SINGLE: return single\n    case DOUBLE: return double\n    case TRIPLE: return triple\n    case HOME_RUN: return homerun\n    case BASE_ON_BALLS: return baseonballs\n    case BASE_ON_ERROR: return baseonerror\n    case STRIKE_OUT: return strikeout\n    case OUT_AT_FIRST: return outatfirst\n    case FOUL_OUT: return foulout\n    case FLY_OUT: return flyout\n    case DOUBLE_PLAY: return doubleplay\n    default: return () => null\n  }\n}\n\n////////////////////////////////////////////////\n////////////////////////////////////////////////\n\nexport function single(state, options) {\n  let first = true, second = false, third = false, runs = 0\n  if (state.third) {\n    runs += 1\n  }\n  if (state.second) {\n    if (options.scoreFromSecondOnSingle || options.firstToThirdOnSingle) {\n      runs += 1\n    } else {\n      third = true\n    }\n  }\n  if (state.first) {\n    if (options.firstToThirdOnSingle) {\n      third = true\n    } else {\n      second = true\n    }\n  }\n  return {\n    state: {first, second, third}, \n    stats: {runs, hits: 1, singles: 1},\n    log: 'single',\n  }\n}\n\nexport function double(state, options) {\n  let first = false, second = true, third = false, runs = 0\n  if (state.third) {\n    runs += 1\n  }\n  if (state.second) {\n    runs += 1\n  }\n  if (state.first) {\n    if (options.scoreFromFirstOnDouble) {\n      runs += 1\n    } else {\n      third = true\n    }\n  }\n  return {\n    state: {first, second, third},\n    stats: {runs, hits: 1, doubles: 1},\n    log: 'double'\n  }\n}\n\nexport function triple(state) {\n  let first = false, second = false, third = true, runs = 0\n  if (state.third) {\n    runs += 1\n  }\n  if (state.second) {\n    runs += 1\n  }\n  if (state.first) {\n    runs += 1\n  }\n  return {\n    state: {first, second, third},\n    stats: {runs, hits: 1, triples: 1},\n    log: 'triple',\n  }\n}\n\nexport function homerun(state) {\n  let runs = 1\n  if (state.first) { runs += 1 }\n  if (state.second) { runs += 1 }\n  if (state.third) { runs += 1 }\n  return {\n    state: {first: false, second: false, third: false},\n    stats: {runs, hits: 1, homeruns: 1},\n    log: 'home run',\n  }\n}\n\nexport function baseonballs(state) {\n  const first = true\n  let {second, third} = state\n  let runs = 0\n  if (state.first) {\n    second = true\n    if (state.second) {\n      third = true\n      if (state.third) {\n        runs += 1\n      }\n    }\n  }\n  return {\n    state: {first, second, third},\n    stats: {runs, bbs: 1},\n    log: 'walk',\n  }\n}\n\nexport function baseonerror(state, options) {\n  const s = single(state, options)\n  return {\n    state: s.state,\n    stats: {runs: s.stats.runs, errors: 1},\n    log: 'reach on error',\n  }\n}\n\nexport function strikeout(state) {\n  return {\n    state: {outs: state.outs + 1},\n    stats: {strikeouts: 1},\n    log: 'strike out',\n  }\n}\n\nexport function outatfirst(state) {\n  return {\n    state: {outs: state.outs + 1},\n    stats: {outatfirsts: 1},\n    log: 'out at first',\n  }\n}\n\nexport function foulout(state) {\n  return {\n    state: {outs: state.outs + 1},\n    stats: {foulouts: 1},\n    log: 'foul out',\n  }\n}\n\nexport function flyout(state, options) {\n  let runs = 0\n  let {first, second, third} = state\n  if (options.scoreFromThirdOnFlyOut) {\n    if (third && state.outs < 2) {\n      runs += 1\n      third = false\n    }\n  }\n  let stats = {runs, flyouts: 1}\n  if (runs) {\n    stats.sacrifices = 1\n  }\n  return {\n    state: {outs: state.outs + 1, first, second, third},\n    stats,\n    log: 'fly out',\n  }\n}\n\nexport function doubleplay(state) {\n  // assume the outs are always the leading base runner and the batter\n  if (state.outs > 1) {\n    return outatfirst(state)\n  }\n  if (!state.first && !state.second && !state.third) {\n    return outatfirst(state)\n  }\n  let {first, second, third} = state\n  if (third) {\n    third = false\n  } else if (second) {\n    second = false\n  } else if (first) {\n    first = false\n  }\n  return {\n    state: {first, second, third, outs: state.outs + 2},\n    stats: {doubleplays: 1},\n    log: 'double play',\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport random from 'lodash/random'\nimport times from 'lodash/times'\nimport {\n  resetGame,\n  resetStatistics,\n  simulateUntil,\n  setSimulationDelay,\n  stopSimulation,\n  lockState,\n  unlockState,\n  makePlay,\n  updateData,\n} from '../actions'\nimport { getFunction } from '../store/gameactions'\n\nfunction pickRandom(weightedArray) {\n  return weightedArray[random(0,weightedArray.length-1)]\n}\n\nfunction simulateInning(weightedArray, {options={}, initialGameState={}}={}) {\n  let runs = 0\n  let gameState = {first: false, second: false, third: false, outs: 0, ...initialGameState}\n  while (gameState.outs < 3) {\n    const {state, stats} = getFunction(pickRandom(weightedArray))(gameState, options)\n    runs += (stats.runs || 0)\n    gameState = {...gameState, ...state}\n  }\n  return { runs }\n}\n\nfunction simulateInnings(weightedArray, n, {options={}}={}) {\n  let runs = 0, runCounts = {}, per9 = {}, in9 = 0, i = 9\n  times(n, () => {\n    i -= 1\n    const r = simulateInning(weightedArray, {options}).runs\n    runs += r\n    in9 += r\n    runCounts[r] = (runCounts[r] || 0) + 1\n    if (i === 0) {\n      per9[in9] = (per9[in9] || 0) + 1\n      in9 = 0\n      i = 9\n    }\n  })\n  return {runs, runCounts, per9, innings: n}\n}\n\nclass GameSimulator extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {simMode: 'game'}\n  }\n\n  resetGame = () => {\n    this.quickLock()\n    this.props.stopSimulation()\n    this.props.resetGame()\n  }\n\n  getRandomAction = () => {\n    return this.props.weightedArray[random(0,this.props.weightedArray.length-1)]\n  }\n\n  simulateBatter = () => {\n    const action = this.getRandomAction()\n    this.props.makePlay(action)\n  }\n\n  stopSimulation = () => {\n    this.props.stopSimulation()\n    this.quickLock()\n  }\n\n  quickLock = ({delay}={}) => {\n    this.props.lockState()\n    setTimeout(this.props.unlockState, (delay || 1.2*this.props.simDelay))\n  }\n\n  setSimDelay = evt => {\n    const v = evt.target.value\n    if (+v > this.props.simDelay) {\n      this.props.setSimulationDelay(+v)\n      this.quickLock()\n    } else {\n      this.quickLock()\n      this.props.setSimulationDelay(+v)\n    }\n  }\n\n  doAutoSim = () => {\n    if (!this.props.locked) {\n      if (this.props.winner && this.props.simUntil === 'eternity') {\n        this.quickLock()\n        this.props.resetGame()\n      } else if (this.props.simUntil) {\n        this.simulateBatter()\n        setTimeout(this.doAutoSim, this.props.simDelay)\n      }\n    }\n  }\n\n  setSimMode = evt => {\n    this.stopSimulation()\n    this.setState({simMode: evt.target.value})\n  }\n\n  startSimulation = () => {\n    const mode = this.state.simMode\n    if (mode === 'batter') {\n      this.simulateBatter()\n    } else if (mode === 'inning') {\n      this.props.simulateUntil('inning')\n    } else if (mode === 'game') {\n      this.props.simulateUntil('game')\n    } else if (mode === 'eternity') {\n      this.props.simulateUntil('eternity')\n    }\n  }\n\n  simulateLots = ({n=9000}={}) => {\n    const data = simulateInnings(this.props.weightedArray, n, {options: this.props.options})\n    this.props.updateData(data)\n  }\n\n  componentDidUpdate() {\n    this.doAutoSim()\n  }\n\n  render() {\n    const disableStart = this.props.simUntil || (this.props.winner && (this.state.simMode !== 'eternity'))\n    const disableStop = !this.props.simUntil\n    return (\n      <div className=\"GameSimulator\">\n        <div style={{display: 'flex'}}>\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            <div>\n              <label htmlFor=\"speed-select\">Speed:</label>\n              <select id=\"speed-select\"\n                value={this.props.simDelay}\n                onChange={this.setSimDelay}\n              >\n                <option value=\"5\">LUDICROUS</option>\n                <option value=\"50\">Faster</option>\n                <option value=\"100\">Fast</option>\n                <option value=\"300\">Medium</option>\n                <option value=\"800\">Slow</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"mode-select\">Mode:</label>\n              <select id=\"mode-select\"\n                value={this.state.simMode}\n                onChange={this.setSimMode}\n              >\n                <option value=\"batter\">Batter</option>\n                <option value=\"inning\">Half Inning</option>\n                <option value=\"game\">Game</option>\n                <option value=\"eternity\">Forever</option>\n              </select>\n            </div>\n            <button onClick={this.startSimulation} disabled={disableStart}>Simulate</button>\n            <button onClick={this.stopSimulation} disabled={disableStop}>Stop</button>\n            <button onClick={this.resetGame}>New Game</button>\n            <button onClick={this.simulateLots}>+1000 Games Instantly</button>\n            <button onClick={this.props.resetStatistics}>Reset Statistics</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    locked: state.locked,\n    winner: state.gameState.winner,\n    weightedArray: state.weightedArray,\n    simDelay: state.autosimulate.delay,\n    simUntil: state.autosimulate.until,\n    options: state.options,\n  }),\n  dispatch => ({\n    lockState: () => dispatch(lockState()),\n    unlockState: () => dispatch(unlockState()),\n    resetGame: () => dispatch(resetGame()),\n    resetStatistics: () => dispatch(resetStatistics()),\n    updateData: data => dispatch(updateData(data)),\n    makePlay: action => dispatch(makePlay(action)),\n    simulateUntil: until => dispatch(simulateUntil(until)),\n    stopSimulation: () => dispatch(stopSimulation()),\n    setSimulationDelay: delay => dispatch(setSimulationDelay(delay)),\n  })\n)(GameSimulator)","import React from 'react'\nimport { connect } from 'react-redux'\nimport round from 'lodash/round'\n\nconst hits = t => (t.homeruns || 0) + (t.triples || 0) + (t.doubles || 0) + (t.singles || 0)\nconst tb = t => 4*(t.homeruns || 0) + 3*(t.triples || 0) + 2*(t.doubles || 0) + (t.singles || 0)\nconst walks = t => t.bbs || 0\nconst err = t => t.errors || 0\nconst outs = t => {\n  return (\n    (t.strikeouts || 0)\n    + (t.outatfirsts || 0)\n    + (t.flyouts || 0)\n    + (t.foulouts || 0)\n    + (t.doubleplays || 0)\n  )\n}\nconst ab = t => hits(t) + outs(t) + err(t)\nconst avg = t => round(hits(t) / ab(t), 3)\nconst obp = t => round((hits(t)+walks(t)) / (ab(t)+walks(t)), 3)\nconst slug = t => round(tb(t) / ab(t), 3)\nconst ops = t => round(obp(t) + slug(t), 3)\n\nconst GameStats = props => {\n  const home = props.stats.home.total\n  const away = props.stats.away.total\n\n  const table = [\n    ['At Bats', ({team}) => ab(team)],\n    ['Hits', ({team}) => hits(team)],\n    ['Walks', ({team}) => team.bbs],\n    ['Strikeouts', ({team}) => team.strikeouts],\n    ['Singles', ({team}) => team.singles],\n    ['Doubles', ({team}) => team.doubles],\n    ['Triples', ({team}) => team.triples],\n    ['Home Runs', ({team}) => team.homeruns],\n    ['Reach on Error', ({team}) => team.errors],\n    ['Hit into DP', ({team}) => team.doubleplays],\n    ['Sac Fly', ({team}) => team.sacrifices],\n    ['AVG', ({team}) => avg(team)],\n    ['OBP', ({team}) => obp(team)],\n    ['Slug', ({team}) => slug(team)],\n    //['OPS', ({team}) => ops(team)],\n  ]\n  const awayProps = {team: away, other: home}\n  const homeProps = {team: home, other: away}\n  return (\n    <div className=\"GameStats\">\n      <table style={{textAlign: 'right'}}>\n        <tbody>\n          <tr>\n            <th>Batting Stats</th>\n            <th>Visitor</th>\n            <th>Home</th>\n          </tr>\n          {table.map(stat => {\n            const [statName, statChecker] = stat\n            const awayStat = statChecker(awayProps) || 0\n            const homeStat = statChecker(homeProps) || 0\n            return (\n              <tr key={stat}>\n                <td>{statName}</td>\n                <td>{awayStat}</td>\n                <td>{homeStat}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default connect(state => ({stats: state.stats}))(GameStats)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst InningState = props => {\n  const batting = {away: 'Visitors', home: 'Home'}[props.batting]\n  return (\n    <div className=\"InningState\">\n    <table>\n      <tbody>\n        <tr>\n          <th>Batting:</th>\n          <td>{batting}</td>\n        </tr>\n        <tr>\n          <th>Outs:</th>\n          <td>{props.outs}</td>\n        </tr>\n        <tr>\n          <th>Last At Bat:</th>\n          <td>{props.lastAB ? props.lastAB : '---'}</td>\n        </tr>\n      </tbody>\n    </table>\n    </div>\n  )\n}\n\nexport default connect(\n  state => {\n    const {batting, outs, inning} = state.gameState\n    const inningLog = state.log[batting][inning] || []\n    let lastInningLog\n    if (batting === 'home') {\n      lastInningLog = state.log.away[inning]\n    } else if (inning > 1) {\n      lastInningLog = state.log.home[inning-1]\n    }\n    const lastAB = inningLog.length\n      ? inningLog[inningLog.length-1]\n      : lastInningLog \n        ? lastInningLog[lastInningLog.length-1] + ` (end of ${batting === 'home' ? 'half' : ''} inning)` \n        : '---'\n    return {batting, outs, lastAB}\n  }\n)(InningState)","import React from 'react'\nimport { connect } from 'react-redux'\nimport times from 'lodash/times'\n\nconst ScoreBoard = props => {\n  const isActive = (t, i) => {\n    if ((t === props.active.batting) && (i === +props.active.inning)) {\n      return 'Active'\n    }\n  }\n  return (\n    <div className=\"ScoreBoard\">\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th>Total</th>\n            {props.header.map(i => <th key={i}>{i}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th className=\"Away\">Visitor</th>\n            <th>{props.awayTotal || 0}</th>\n            {props.away.map((runs, i) => <td key={i} className={isActive('away', i+1)}>{runs}</td>)}\n          </tr>\n          <tr>\n            <th className=\"Home\">Home</th>\n            <th>{props.homeTotal || 0}</th>\n            {props.home.map((runs, i) => <td key={i} className={isActive('home', i+1)}>{runs}</td>)}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nfunction getScores(state) {\n  const {inning, batting, outs, winner} = state.gameState\n  const {home, away} = state.stats\n  let header = [], awayScores = [], homeScores = []\n  let awayTotal = 0, homeTotal = 0\n  times(inning, j => {\n    const i = j + 1\n    header.push(i)\n    const awayScore = (away[i] || {}).runs || 0\n    const homeScore = (home[i] || {}).runs || 0\n    awayTotal += awayScore\n    awayScores.push(awayScore)\n    homeTotal += homeScore\n    if (i < +inning || batting === 'home') {\n      homeScores.push(homeScore)\n    } else {\n      homeScores.push(' ')\n    }\n  })\n  return {\n    header, \n    awayTotal, \n    homeTotal,\n    winner,\n    active: {batting, inning: winner ? inning + 1 : inning},\n    away: awayScores, \n    home: homeScores,\n  }\n}\n\nexport default connect(getScores)(ScoreBoard)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateWeights, gameActionList } from '../actions';\nimport round from 'lodash/round'\n\nclass Weights extends React.Component {\n  updateWeight = k => {\n    return evt => this.props.updateWeights({...this.props.weights, [k]: +evt.target.value})\n  }\n\n  render() {\n    let total = 0\n    for (const k in this.props.weights) {\n      total += +this.props.weights[k]\n    }\n    const actions = [\n\n    ]\n    return (\n      <div className=\"Weights\">\n        <table>\n          <thead>\n            <tr>\n            <th>Outcome</th><th>Relative Probability</th>\n            </tr>\n          </thead>\n          <tbody>\n            {gameActionList.map(k => {\n              return (\n                <tr key={k}>\n                  <td>{k}</td>\n                  <td>\n                    <input type=\"number\" \n                      min={0}\n                      value={this.props.weights[k]} \n                      onChange={this.updateWeight(k)}/>\n                  </td>\n                  <td>\n                    {`${round(100 * this.props.weights[k] / total, 1)}%`}\n                  </td>\n                </tr>\n              )\n            })}\n            <tr><th>Total:</th><td>{total}</td></tr>\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({weights: state.weights}),\n  dispatch => ({updateWeights: weights => dispatch(updateWeights(weights))}),\n)(Weights)","import times from 'lodash/times'\n\nexport function updateGameState(old, updated) {\n  return {...old, ...updated}\n}\n\nexport function updateStats(old, updates) {\n  const result = {...old}\n  for (const k in updates) {\n    if (result[k] === undefined) {\n      result[k] = 0\n    }\n    result[k] += updates[k]\n  }\n  return result\n}\n\nexport function checkForWin(gameState) {\n  const { inning, batting, homescore, awayscore, outs } = gameState\n  if (inning < 9) {\n    return false\n  }\n  if (homescore === awayscore) {\n    return false\n  }\n  if (homescore > awayscore) {\n    if (batting === 'home' || (batting === 'away' && outs >= 3)) {\n      return 'home'\n    }\n  }\n  if (awayscore > homescore) {\n    if (batting === 'home' && outs >= 3) {\n      return 'away'\n    }\n  }\n}\n\nexport function checkForInning(gameState) {\n  if (gameState.outs >= 3) {\n    return true\n  }\n  return false\n}\n\nexport function nextInning(state) {\n  if (state.batting === 'away') {\n    return {...state, batting: 'home', first: false, second: false, third: false, outs: 0}\n  } else if (state.batting === 'home') {\n    return {...state, inning: state.inning + 1, batting: 'away', first: false, second: false, third: false, outs: 0}\n  }\n}\n\nexport function buildWeightedArray(weights) {\n  const result = []\n  for (const k in weights) {\n    times(weights[k], () => result.push(k))\n  }\n  return result\n}\n\nfunction applyUpdates(state, updates={}) {\n  const {stats={}, log} = updates\n  const {batting, inning} = state.gameState\n  let gameState = updateGameState(state.gameState, updates.state)\n  const teamStats = state.stats[batting].total\n  const currentInningStats = (state.stats[batting] || {})[inning] || {}\n  if (stats.runs) {\n    if (batting === 'away') {\n      gameState.awayscore += stats.runs\n    }\n    if (batting === 'home') {\n      gameState.homescore += stats.runs\n    }\n  }\n  const winner = checkForWin(gameState)\n  if (winner) {\n    gameState.winner = winner\n  }\n  let result = {\n    ...state,\n    gameState,\n    stats: {\n      ...state.stats,\n      [batting]: {\n        ...state.stats[batting],\n        total: updateStats(teamStats, stats),\n        [inning]: updateStats(currentInningStats, stats)\n      }\n    },\n    log: {\n      away: {...state.log.away},\n      home: {...state.log.home},\n    }\n  }\n  if (!result.log[batting][inning]) {\n    result.log[batting][inning] = []\n  }\n  if (log) {\n    let tolog = log\n    if (stats.runs) {\n      if (stats.runs === 1) {\n        tolog += ` (1 run`\n      } else {\n        tolog += ` (${stats.runs} runs`\n      }\n      tolog += `, ${gameState.awayscore}-${gameState.homescore})`\n    }\n    console.log(tolog)\n    result.log[batting][inning].push(tolog)\n  }\n  return result\n}\n\nfunction applyFunction(state, f) {\n  if (state.gameState.winner) {\n    return state\n  }\n  const updates = f(state.gameState, state.options)\n  return applyUpdates(state, updates)\n}\n\nfunction advanceInning(state) {\n  let {batting, inning} = state.gameState\n\n  if (batting === 'away') {\n    batting = 'home'\n  } else if (batting === 'home') {\n    batting = 'away'\n    inning += 1\n  }\n  return {\n    ...state,\n    gameState: {\n      ...state.gameState,\n      batting,\n      inning,\n      first: false,\n      second: false,\n      third: false,\n      outs: 0\n    }\n  }\n}\n\nfunction updateCounter(old={}, updates={}) {\n  let result = {...old}\n  for (const k in updates) {\n    result[k] = (result[k] || 0) + updates[k]\n  }\n  return result\n}\n\nexport function updateData(data, {runs=0, innings=0, runCounts={}, per9={}}) {\n  return {\n    ...data,\n    innings: data.innings + innings,\n    runs: data.runs + runs,\n    runCounts: updateCounter(data.runCounts, runCounts),\n    per9: updateCounter(data.per9, per9)\n  }\n}\n\nfunction updateDataFromInning(state) {\n  const runs = state.stats[state.gameState.batting][state.gameState.inning].runs || 0\n  let current9 = {...state.current9}\n  let per9\n  current9.innings += 1\n  current9.runs += runs\n  if (current9.innings === 9) {\n    per9 = {[current9.runs]: 1}\n    current9 = {innings: 0, runs: 0}\n  }\n  return {\n    ...state,\n    data: updateData(state.data, {runs, innings: 1, runCounts: {[runs]: 1}, per9}),\n    current9\n  }\n}\n\nexport function applyAndCheck(state, f) {\n  if (!state.locked && !state.gameState.winner) {\n    let result = applyFunction(state, f)\n    if (result.gameState.outs >= 3 && (\n      // don't use home innings after 8th\n      (state.gameState.inning < 9) || (state.gameState.batting === 'away')\n    )) {\n      result = updateDataFromInning(result)\n    }\n    if (result.gameState.winner) {\n      console.log('end of game; ' + result.gameState.winner + ' wins')\n      if (result.autosimulate.until === 'inning' || result.autosimulate.until === 'game') {\n        result.autosimulate = {...result.autosimulate, until: false}\n      }\n      return result\n    }\n    if (checkForInning(result.gameState)) {\n      result = advanceInning(result)\n      console.log(`${result.gameState.batting} batting in inning ${result.gameState.inning}`)\n      if (result.autosimulate.until === 'inning') {\n        result.autosimulate = {...result.autosimulate, until: false}\n      }\n    }\n    return result\n  }\n  return state\n}\n","import { buildWeightedArray } from './bigmess'\n\nconst gameState = {\n  homescore: 0,\n  awayscore: 0,\n  inning: 1,\n  batting: 'away',\n  first: false,\n  second: false,\n  third: false,\n  outs: 0,\n  winner: null,\n}\nconst stats = {\n  away: {total: {}},\n  home: {total: {}},\n}\nconst log = {\n  away: {},\n  home: {},\n}\nconst options = {\n  scoreFromThirdOnFlyOut: true,\n  scoreFromSecondOnSingle: true,\n  scoreFromFirstOnDouble: false,\n  firstToThirdOnSingle: false,\n}\nconst weights = {\n  SINGLE: 6,\n  DOUBLE: 1,\n  TRIPLE: 2,\n  HOME_RUN: 1,\n  BASE_ON_BALLS: 2,\n  BASE_ON_ERROR: 2,\n  STRIKE_OUT: 7,\n  OUT_AT_FIRST: 7,\n  FOUL_OUT: 2,\n  FLY_OUT: 5,\n  DOUBLE_PLAY: 1,\n}\nconst weightedArray = buildWeightedArray(weights)\nconst autosimulate = {\n  until: false,\n  delay: 300,\n}\nconst data = {\n  runs: 0,\n  innings: 0,\n  runCounts: {},\n}\nconst initialState = {\n  gameState,\n  stats,\n  log,\n  options,\n  weights,\n  weightedArray,\n  autosimulate,\n  data,\n  current9: {innings: 0, runs: 0}\n}\n\nexport default initialState","import {\n  MAKE_PLAY,\n  UPDATE_DATA,\n  RESET_GAME,\n  RESET_STATISTICS,\n  UPDATE_WEIGHTS,\n  SIMULATE_UNTIL,\n  STOP_SIMULATION,\n  SET_SIMULATION_DELAY,\n  LOCK_STATE,\n  UNLOCK_STATE,\n} from '../actions'\n\nimport {\n  getFunction\n} from './gameactions'\n\nimport {\n  buildWeightedArray,\n  applyAndCheck,\n  updateData,\n} from './bigmess'\n\nimport initialState from './initialState'\n\n\nfunction reducer(state=initialState, action) {\n  switch(action.type) {\n    case MAKE_PLAY: return applyAndCheck(state, getFunction(action.payload))\n    case RESET_STATISTICS: return {...state, data: {...initialState.data}, current9: {...initialState.current9}}\n    case UNLOCK_STATE: return {...state, locked: false}\n    case LOCK_STATE: return {...state, locked: true}\n    case UPDATE_DATA: return {...state, data: updateData(state.data, action.payload)}\n    case RESET_GAME: \n      return {\n        ...state,\n        gameState: initialState.gameState,\n        stats: initialState.stats,\n        log: initialState.log,\n      }\n    case UPDATE_WEIGHTS:\n      return {\n        ...state, \n        weights: action.payload, \n        weightedArray: buildWeightedArray(action.payload)\n      }\n    case STOP_SIMULATION:\n      return {...state, autosimulate: {...state.autosimulate, until: false}}\n    case SIMULATE_UNTIL:\n      return {...state, autosimulate: {...state.autosimulate, until: action.payload}}\n    case SET_SIMULATION_DELAY:\n      return {...state, autosimulate: {...state.autosimulate, delay: action.payload}}\n    default: return state\n  }\n}\n\nexport default reducer","import { createStore } from 'redux'\nimport reducer from './reducer'\n\nconst store = createStore(reducer)\n\nexport default store","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  Analysis,\n  BaseRunners,\n  GameLog,\n  GameSimulator,\n  GameStats,\n  InningState,\n  ScoreBoard,\n  Weights,\n} from './components'\nimport store from './store'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <div className=\"controls\">\n            <GameSimulator />\n            <Analysis />\n            <Weights />\n          </div>\n          <div className=\"simulation\">\n            <GameStats/>\n            <div className=\"GameState\">\n              <ScoreBoard />\n              <BaseRunners />\n              <InningState />\n            </div>\n          </div>\n          <div className=\"log\">\n            <GameLog />\n          </div>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}